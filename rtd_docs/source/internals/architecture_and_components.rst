Architecture and components
===========================

In every QED scenario there might be one or more components of this nature:

* QED log: where the authentication data lives, normally a RAFT replicated cluster.
* QED gossip agents: network on which QED emits snapshots to agents.
* QED snapshot store: stores all the snapshots generated by QED.
* Events source: something that stores the data needed to build QED events.
* Application: a system/action that works with data from the event source to its job.
* Third party services: a system/action used by application or event source to execute their job.

The relation between these components will affect the deployment architecture as there are multiple valid alternatives which guarantee a correct QED operation and service.

The relation between the QED log, gossip agents, and snapshot store depends on their connectivity requirements and APIs:

* QED log receives events using an HTTP, and a protobuf based GRPC API.
* QED log emits via a gossip UDP network messages processed by the QED agents.
* QED publisher agent pushes snapshots to the store using a given HTTP API.

The relationship between the event source, third party services, and the application does not affect the QED per se, but the application must be able to map an event to a QED event univocally, because QED Log stores no data but a representation in the form of a SHA256 hash.

The application needs to talk to QED Log, either directly by its API or using one of the QED Log supported client libraries.

Please refer to the QED manual to knows about how to deploy a production instance.


TODO: ADD IMAGE
