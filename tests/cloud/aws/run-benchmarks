#!/usr/bin/env sh

# Copyright 2018-2019 Banco Bilbao Vizcaya Argentaria, S.A.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

TF_REGION="eu-west-1"
TF_VOL_SIZE="20"
# List with all the instance flavours you want to run the benchmark.
FLAVOURS="t2.2xlarge c5.2xlarge"

if [ -z "$TF_PROFILE" ]; then
	echo Please ensure TF_PROFILE is set
	exit 1
fi

if [ -z "$TF_CLUSTER_SIZE" ]; then
	echo Cluster size auto-set to 1
	TF_CLUSTER_SIZE=1
fi

function debug {
    if [ ! -z "$DEBUG" ]; then
        set -x
        export TF_LOG=INFO
        read -p "Press enter to continue..."
    fi
}

function tf_init {
    debug
    terraform init
    clean_resources
}

function clean_resources {
    echo "Cleaning resources"
    terraform destroy -var "cluster_size=${TF_CLUSTER_SIZE}" -var "profile=${TF_PROFILE}" -var "flavour=${TF_FLAVOUR}" -var "region=${TF_REGION}" -var "volume_size=${TF_VOL_SIZE}" -target=null_resource.copy-qed-to-nodes -target=null_resource.copy-qed-to-spartan -auto-approve
    sleep 10
    debug
}

function destroy_all_resources {
    echo "Terraform destroy all"
    terraform destroy -var "cluster_size=${TF_CLUSTER_SIZE}" -var "profile=${TF_PROFILE}" -var "flavour=${TF_FLAVOUR}" -var "region=${TF_REGION}" -var "volume_size=${TF_VOL_SIZE}" -auto-approve
    debug
}

function refresh_tf_state {
    terraform refresh -var "cluster_size=${TF_CLUSTER_SIZE}" -var "profile=${TF_PROFILE}" -var "flavour=${TF_FLAVOUR}" -var "region=${TF_REGION}" -var "volume_size=${TF_VOL_SIZE}"
    debug
}

function get_public_ip {
    # Tonight we dine in HELL
    TF_PUBLIC_IP=$(terraform output -state=terraform.tfstate | grep spartan | cut -d' ' -f3)
    debug
}

function get_results {
    refresh_tf_state
    get_public_ip
    echo "Copying benchmark results."
    scp -o "StrictHostKeyChecking=no" "ec2-user@${TF_PUBLIC_IP}:/tmp/*results.txt" results/
    debug
}

function run_benchmark {
    for instance_flavour in ${FLAVOURS};
    do
        echo "Running on $instance_flavour instance"
        TF_FLAVOUR="${instance_flavour}"
        terraform apply -var "cluster_size=${TF_CLUSTER_SIZE}" -var "profile=${TF_PROFILE}" -var "flavour=${TF_FLAVOUR}" -var "region=${TF_REGION}" -var "volume_size=${TF_VOL_SIZE}" -auto-approve
	    debug
        get_results
        clean_resources
    done
}

echo "Create results dir"
mkdir -p results

# Download Terraform modules
tf_init

# Run benchmarks with multiple instance types
run_benchmark
destroy_all_resources



