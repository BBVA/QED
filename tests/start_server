#!/usr/bin/env sh

# Copyright 2018-2019 Banco Bilbao Vizcaya Argentaria, S.A.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo "export CLUSTER_SIZE=N [2|4] env variable to execute the benchmark in replica mode. N number of folowers"
echo "export PROFILING=true env variable to enable go profiling"
echo "export TLS=true to allow https"

tdir=$(mktemp -d /var/tmp/demo.XXX)
certs="/var/tmp/certs"

if [ ! -z "$PROFILING" ]; then
    echo "PROFILING=enabled"
    mkdir -p results
    PROFILING=--profiling
else
    echo PROFILING=disabled
fi

if [ ! -z "$TLS" ]; then
    TLS="--certificate ${certs}/server.crt \ --certificate-key ${certs}/server.key"
else
    echo "TLS=disabled" 
fi

leader() {
    mkdir -p ${tdir}/0/

    go run ../main.go start \
        -k test_key \
        -p ${tdir}/0/ \
        --node-id leader \
        --keypath ${certs}/id_ed25519 \
        --gossip-addr 127.0.0.1:8400 \
        -l error \
        $TLS \
        $PROFILING \
        &
}

follower() {
    mkdir -p ${tdir}/$1

    go run ../main.go start \
        -k test_key \
        --node-id follower_$1 \
        -p ${tdir}/$1 \
        --keypath ${certs}/id_ed25519 \
        -l error \
        --http-addr :880$1 \
        --mgmt-addr :870$1 \
        --metrics-addr :860$1 \
        --raft-addr :850$1 \
        --gossip-addr 127.0.0.1:840$1 \
        --join-addr 127.0.0.1:8700 \
        --gossip-join-addr 127.0.0.1:8400 \
        $TLS \
        $PROFILING  \
        &
}

if [ -z "$CLUSTER_SIZE" ]
then
    echo '>>>> Starting single node...'
    leader
else
    echo '>>>> Starting cluster mode...'
    leader
    sleep 5
    echo '>>>> Starting followers'
    for i in $(seq 1 $CLUSTER_SIZE); do
        follower ${i}
    done
fi
sleep 10
echo '>>>> done.'
