#!/bin/bash

#  Copyright 2018-2019 Banco Bilbao Vizcaya Argentaria, S.A.
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# Deployment options
CGO_LDFLAGS_ALLOW='.*'
QED="go run $GOPATH/src/github.com/bbva/qed/main.go"

$QED generate keypair

# Server options
LEADER_CONFIG=()
LEADER_CONFIG+=('--log debug')
LEADER_CONFIG+=('--api-key key')
LEADER_CONFIG+=('--db-path /var/tmp/qed${i}/db')
LEADER_CONFIG+=('--gossip-addr 127.0.0.1:840${i}')
LEADER_CONFIG+=('--http-addr 127.0.0.1:880${i}')
LEADER_CONFIG+=('--metrics-addr 127.0.0.1:860${i}')
LEADER_CONFIG+=('--mgmt-addr 127.0.0.1:870${i}')
LEADER_CONFIG+=('--node-id server${i}')
LEADER_CONFIG+=('--private-key-path /var/tmp/id_ed25519')
LEADER_CONFIG+=('--raft-addr 127.0.0.1:850${i}')
LEADER_CONFIG+=('--raft-path /var/tmp/qed${i}/wal')
LEADER_CONFIG+=('--enable-profiling')

FOLLOWER_CONFIG=("${LEADER_CONFIG[@]}")
FOLLOWER_CONFIG+=('--raft-addr-join 127.0.0.1:8700')
FOLLOWER_CONFIG+=('--gossip-join-addr 127.0.0.1:8400')

pids=()

n="$1"
if [ -z $n ]; then
	n=0
fi

if ! which envsubst
then
    echo -e "Please install envsubst. OSX -> brew install gettext ; brew link --force gettext"
    exit 1
fi

mkdir -p /var/tmp/qed-log-0
leader=$(echo ${LEADER_CONFIG[@]} | i=0 envsubst )
$QED server start $leader 2>&1 | tee  /var/tmp/qed-log-0/server.log &
pids+=($!)
sleep 3s

for id in $(seq 1 1 $n); do
	mkdir -p /var/tmp/qed${id}
	follower=$(echo ${FOLLOWER_CONFIG[@]} | i=$id envsubst )
	$QED server start $follower 2>&1 | tee  /var/tmp/qed-log-${id}/server.log &
	pids+=($!)
	sleep 3s
done

for pid in ${pids[*]}; do
	echo waiting for pid $pid
	wait $pid
done
